TODO

1. Перезалить картинки!
2. Флаги на слайдах с частичной поддержкой
3. Иконки для ссылок

12. Виньетирование

17. Показать сначала отрезание фона, а потом уже про SVG-фолбек

19. Без белых контуров? (здесь и в подобных демках)

20. Хочется чёрный фон

21. Для хорошего фолбека лучше зубастый фон (для многих примеров, проверить)
ГИФКИ С КОНТУРОМ

27. Тленограм? - текстом
32. Скрин? (sea - вставить реальный код с флагами)

36. Ссылка на флаг (это ведь протокол) ??


37. Выделить в коде SVG важные части <mark>: название фильтра, картинка и т.п. (то, что ты сама выделяешь)


поправить нумерацию на слайде со списокм режимов

--------------------------------------------

ВСТУПЛЕНИЕ

Привет!

Я хотела бы рассказать вам о том, как можно использовать некоторые возможности фотошопа прямо в браузере.

Цифровая обработка изображений начала развиваться в 60-х, и сейчас имеет очень широкое распространение. Она используется в научных целях, в обработке фото и видео.

Сейчас её делает даже ваш телефон, когда вы накладываете фильтры в инстаграме : )
Теперь любая домохозяйка может открыть графический редактор и обработать фотки из отпуска, например - сделать море синее, а талию - уже.

Обычно для этого требуется специальные программы по работе с графикой, но с недавнего времени обработка изображений начала просачиваться в web.

Например, сейчас уже доступны CSS-фильтры и фильтры из SVG, хотя и первые, и вторые пока что не очень поддерживаются.

Этим летом из фотошопа в web попала ещё одна замечательная штука: режимы наложения.

Думаю, что все вы знаете, что в фотошопе можно взять два слоя, наложить один на другой и настройками задать как они будут взаимодействовать между собой: просто просвечивать или смешиваться цветами.

Те, кто работали с режимами наложения, знают, что с ними можно делать много интересного.

Собственно, этот котик демонстрирует нам тему доклада: это режимы наложения, и теперь они работают прямо в браузере.

Значительная особенность режимов в браузере - возможность интерактивного взаимодействия. Вы можете менять режимы на лету и делать анимированные эффекты.

(АНИМИРОВАТЬ ДЕМО?)

---*---

Я покажу как работают режимы наложения в CSS, расскажу про варианты использования и про поддержку браузерами.

---*---

В CSS режимы наложения представлены в двух вариантах: background-blend-mode и mix-blend-mode.

---( слайд )

background-blend-mode - это наложение слоев фона, mix-blend-mode - управление наложением элементов на странице.

Вот список возможных значений, их несколько меньше чем в фотошопе:

---( слайд )

normal
multiply
screen
overlay
darken
lighten
color-dodge
color-burn
hard-light
soft-light
difference
exclusion
hue
saturation
color
luminosity

(сравнить число)

Теперь давайте посмотрим как это работает.

Так как background-blend-mode лучше поддерживается браузерами, я выбрала его для демонстрации.
Напомню, что с помощью этого свойства мы управляем наложением слоев фона.

Посмотрим в действии: вот есть картинка с котиком, под ней цветной фон.
Поменяем режимы наложения и посмотрим что получается:

---( демо с котиком и выбором режимов наложения )

Всё как в фотошопе, только прямо в браузере : )

Причем мы не ограничены двумя слоямии фона их содержимым.

Слоев может быть больше двух, и они могут содержать, не только картинки, но и градиенты.

Использование режимов наложения для градиентов открывает поистине новые возможности создания паттернов, потому что из простых паттернов с помощью режимов наложения можно получить более сложные и интересные.

Посмотрим несколько примеров. Здесь нет картинок, здесь только CSS с режимами наложения:

---(несколько демо с градиентами, вкл./выкл режимы наложения)

Мы только что просмотрели кусочек передачи "Здравствуй, будущее", потому что режимы наложения ещё не очень хорошо поддерживаются браузерами.

Давайте посмотрим как выглядят примеры без режимов наложения - так же они будут выглядеть и в браузерах без поддержки. Выглядеть они будут вот так:

---(слайд)

 Градиенты с наложением выглядят эффектно, но картинки пока что будут надежнее.

Перейдем к более практическим вопросам: как можно использовать режимы наложения?

ПРИМЕНЕНИЕ
--------------------------------------------

---( демо с цветными картинками по наведению - эффект для фотогалереи )

Предположим, у вас есть фотогалерея, и вы хотите, чтобы по умолчанию картинки были черно-белыми, а по наведению становились цветными.

Конечно, можно делать каждой фотке черно-белую пару, и показывать их по очереди, но что если фотки большие?

С режимами наложения можно обойтись без дублирования изображений, используя всего пару строчек в CSS.

(показываем как работает)

При таком способе нам не нужно загружать лишние картинки, чтобы получить красивый эффект. Работает легко и просто для фотографий любого размера, и это никак не повлияет на скорость загрузки страницы.

Пользователи браузеров без режимов наложения увидят просто цветные картинки.

Область применения эффекта - фотогалереи или логотипы в подвале сайта.

Например, вы хотите показать стек используемых технологий, но логотипы не должны быть цветными, чтобы не отвлекать от текста. Делаем вот такое:

---(слайд гит грант sass) ССЫЛКИ!!!

В браузерах с поддержкой будет чб, без - цветные логотипы, и ничего, вобщем-то, особо не поломается.

Красить в чб можно и с помощью CSS фильтров, но у режимов наложения в данный момент поддержка немного больше. Например, они работают в Firefox, в отличие от фильтров.
В Firefox поддержка фильтров обещана с 35-й версии.

---*---

Так же с помощью режимов можно легко добавлять виньетирование на фотографии, вот такое:

---(Градиенты для виньеток на фото)

Слой с фоткой, ниже слой с радиальным градиентом.

Можно предположить, что аналогичный эффект можно получить без режимов наложения просто наложив полупрозрачный градиент поверх картинки.

Можно, но это не всегда сработает. Давайте сравним:

---(демо с градиентами на картинке)

Справа и слева одинаковые градиенты, только слева просто полупрозрачный градиент, а справа такой же, но в режиме наложения multiply.

Как мы видим, градиент слева просто наложился поверх как независимый слой, и если сделать его менее прозрачным - под ним не будет видно картинку.

Градиент справа "сложился", суммировался с цветами картинки, и мы получили измененное изображение, не потеряв прозрачность.

В большинстве случаев виньетирование с режимами наложения сработает лучше, чем простым цветом. И для этого не нужно открывать фотошоп.

---*---

Ещё можно перекрашивать картинки в цвет сайта.

Предположим, у нас есть вот такая страница, и мы хотим выровнять все картинки по цвету - сделать их одного оттенка:

---(демо с цветными картинками в дизайне + слайдер для цветов)

С режимами наложения - легко!

Это может быть очень полезно для прототипирования, когда картинки могут ещё сто раз поменяться.

Или, если изменится цветовая схема сайта, вам не нужно будет заново перекрашивать картинки в фотошопе - достаточно будет изменить фоновый цвет!

Если режимы не поддерживаются - картинки просто останутся цветными, и ничего особо не поломается.

---*---

Также режимы наложения замечательно умеют вырезать фон из картинок.

Предположим, у вас есть Jpeg с объектом на однородном фоне, и вам нужен только объект без фона.

!!!!!---(слайд с рыцарями с разным весом)

Какие у нас есть варианты?

Первым делом пробуем обрезать поля и сохранить в Png:

---(включаем картинку с PNG 8 и 24)

PNG значительно проигрывает по весу.

---*---

Также можно вспомнить про CSS-маски, но у них пока не очень с поддержкой.

---*---

Какие ещё есть варианты?

Например, SVG-маски:

---(рыцарь + маска)

Для примера берем Jpeg с рыцарем, накладываем поверх Png маску и получаем картинку с рыцарем обрезанную по маске.

!!!!! Суммарный вес двух картинк меньше, чем у Png с прозрачностью (ПРОВЕРИТЬ).

В чем преимущества SVG?
В том, что такая конструкция будет работать везде, где поддерживается SVG, даже в IE9, в отличие от CSS масок.
Кстати, отличный способ обрезать изображения.

---*---

Это было лирическое отступление, теперь давайте посмотрим как с вырезанием справляются режимы наложения. Пробуем вырезать светлые участки с помощью режима darken:

---(слайд с рыцарем на фоне)

Фон пропал, причем вместе с остальными белыми областями, при этом сам рыцарь наложился на цвета фона.

Иногда это может быть полезным эффектом, иногда нет.

---*---

Теперь попробуем вырезать темные области. Кто пробовал делать гиф с прозрачность - знает, что получатся ужасные зубчатые края, и ничего хорошего.

Воспользуемся режимом lighten:

(включаем)

---(слайд с огнем на фоне)

Как видите, темные области пропали, а оставшиеся светлые наложились на фон - и при этом никаких зубчатых краев!

Представьте себе, мы только что аккуратно вырезали из фона танцующие языки огня!

Эти примеры могут выглядеть не очень впечатляющими, но давайте попробуем пристроить их к делу. Для примера возьмем тот же огонь.

Предположим, мы хотим дополнить рождественскую открытку изображением камина, вон у нас уже и огонь подходящий нашелся...

Если склеить анимацию с фоном, конструкция получится увесистой и зернистой, но что если огонь останется как есть. а фоном будет Jpeg?

(ПОПРОБОВАТЬ СКЛЕИТЬ)

---(камин)

Как видите, это две независимые картинки, объединенные с помощью режима наложения lighten. При этом фон не потерял в качестве.

(ПЕРЕДВИНУТЬ?)

Таким образом вы можете легко накладывать любые картинки друг на друга не заморачиваясь обрезанием фона. Даже анимированные.

---*---

Или вот другой пример: есть текст с картинками:

---( драконы и рыцари )

Хочется использовать бумажный фон, и очевидно, что белый фон тут лишний, поэтому добавляем режимы наложения:

---( драконы и рыцари + blend mode )

Этот макет можно ещё немного улучшить, если добавить CSS-shapes:

---( драконы и рыцари + Shapes )

Правда, будет работать не везде : ) (доб браузеры)

С режимами наложения выглядит гораздо лучше, и никакой возни с графическими редакторами. Вы можете сколько угодно менять картинки в тексте, не заморачиваясь обрезкой фона.

Это вообще может быть пользовательский контент - оформление блога, например. Автор просто вставляет картинки в статью, и они сами приводятся к нужному виду.

---*---

Возвращаясь к вопросу обрезания анимации - вы только представьте себе, какие спецэффекты можно сделать таким же образом, используя, например, картинки с бенгальскими огнями и прочей праздничной иллюминацией.

В фотошопе вы могли бы сделать это статичным------

Эффекты не на каждый день, конечно, но к праздникам может быть очень уместно.

## winter is coming

 Туда же эффекты сияния и свечения.

 ---*---

Перейдем к коду:

Как задать режим наложения в CSS?

Начнем с background-blend-mode.

Как я уже говорила, для наложения слоев обязательное условие, чтобы слоев было больше одного. В нашем случае первым слоем будет цвет (teal).

background: teal

Добавляем картинку, но пока что ничего не происходит:

background: teal; url(http://placekitten.com/250/200);

Теперь можно добавить режим наложения:

background: teal url(http://placekitten.com/250/200);
background-blend-mode: hard-light;

Легким движением руки мы покрасили кота в нужный цвет.

---*---

Слоев фона может быть больше двух, и для каждого слоя можно отдельно задавать режим наложения:

---( слоеный тлен )

Добавляем слои с картинками и градиентами, но ничего не происходит. Чтобы случилась магия, нужны режимы наложения:

---(включаем)

Вот так без особых усилий можно сделать тленограм прямо в браузере.

ВЫДЕЛИТЬ ЦВЕТОМ СТРОЧКУ С РЕЖИМАМИ

---*---

Что интересно, порядок наложения слоев тоже играет свою роль.

---*---

Эффект наложения цвета на картинку выглядит иначе, чем наложение картинки на цвет

---(демо)

Если вы выберите вариант с цветом поверх картинки, следует помнить, что в браузерах без поддержки режимов наложения будет виден только верхний слой - цвет

-(ВКЛ).

Будьте внимательны.

---*---

Второе свойство - mix-blend-mode - управляет наложением друг на друга элементов страницы.

Задается вот таким образом:

img { mix-blend-mode: multiply; }
...

Причем можно задать режим наложения для контейнера с элементами, и он сработает для всех элементов внутри контейнера. Таким образом можно задать режим наложения для всей страницы, например.

Результат работы mix-blend-mode будет выглядеть вот так:

---(Море поверх моря)

это скрин, потому что свойство ещё не очень хорошо поддерживается, но вы можете сходить по ссылке и увидеть действующий пример, если ваш браузер позволит.

Ещё можно делать вот такие безумные штуки:

---( disco )

Это гифка, аним скриншот, сделанная в браузере где всё работает как надо (к сожалению, так не везде). Демо сделано без участия картинок - на чистом CSS и при участии mix-blend-mode.

Вряд ли кому-то понадобится такое в реальной жизни, но зато подобные эксперименты позволяют исследовать новые возможности CSS.

---*---

Поддержка браузерами:

---(слайд)

Плохие новости: IE не поддерживает никакие режимы наложения вообще.

Хорошие новости: если режимы наложения не поддерживаются, в большинстве случаев на странице ничего не поломается - картинки просто останутся как есть.

Остальные браузеры:

background-blend-mode поддерживается в свежих вебкитах и Firefox (примерно с лета). Поддержка в Safari начиная с 7.1, обновите браузер, если ещё не.

То есть уже можно начинать потихоньку использовать для каких-то декторативных штук.

mix-blend-mode - c Firefox(32), но со странностями, Chrome с 31 под флагом, полная поддержка в Safari 7.1.

mix c bb blend может уронить браузер (FF)

---*---

Чтобы поиграться с mix-blend-mode в Хроме, включите вот такой флаг, а в опере - вот такой

---(слайд)

Узнать актуальную поддержку браузерами можно на http://caniuse.com/#search=blend

---*---

Запасные пути

SVG

Немного о фолбеках для браузерах без поддержки режимов наложения.

Частично проблему можно решить с помощью SVG: в нем есть свои режимы наложения, доступные через фильтры.

Недостатки: нижний слой для наложения фона придется задавать в том же фильтре.

Причем при ресайзе приклееный фон ресайзится вместе с картинкой, и окончательно перестает совпадать с фоном страницы. Отчасти это можно исправить SVG-маской.

Также при ресайзе могут появляться белые линии в местах стыковки фона. Я не нашла способа это исправить, разве что брать фон побольше.

Второй недостаток состоит в том, что список доступных режимов наложения несколько отличается от CSS, причем в данный момент это зависит от браузеров. В современных вебкитах набор режимов наложения совпадает с CSS, в FF и IE их меньше. Думаю, что FF скоро догонит вебкиты, в Nigthly режимов больше.

Плюсы способа c SVG - доставка режимов наложения в IE10+, а также возможность получить mix-blend-mode в браузерах, где он ещё не работает или под флагом.

Код будет состоять из двух частей: это фильтр

Фильтр
---(слайд)

а это код картинки с фильтром, которую вы вставляете в текст:

Картинка
---(слайд)

Картинку тоже придется завернуть в SVG.

выглядеть будет также как режимы наложения в современных браузерах:


---(слайд)

Но помимо прочего демо будет работоспособно в IE начиная с 10й версии.
В 9-м не работают фильтры, и картинки останутся без режимов наложения, так что надо будет придумывать что-то ещё.

-------------------------------

Возможно, режимы наложения ещё не вполне принадлежат настоящему, но я уверена, что им найдётся достойное место в будущем : )

...............................................................................................................................

# (Сравнить вес (заменителей) картинок с маской, пнг, жпг с режимами наложения)

# Цветные тени (before + multiply)

# Сравнить с вебкит фильтрами???

# (ПРЕИМУЩЕСТВА)
лучше поддержка
меньше картинок - меньше вес сайта


